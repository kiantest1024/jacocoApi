# 改进的JaCoCo扫描器Docker镜像
# 添加网络重试和更好的错误处理

FROM maven:3.8.6-openjdk-11-slim

# 设置工作目录
WORKDIR /app

# 设置环境变量以避免交互式安装
ENV DEBIAN_FRONTEND=noninteractive

# 配置APT使用更稳定的源和重试
RUN echo "Acquire::Retries \"3\";" > /etc/apt/apt.conf.d/80-retries && \
    echo "Acquire::http::Timeout \"30\";" >> /etc/apt/apt.conf.d/80-retries && \
    echo "Acquire::ftp::Timeout \"30\";" >> /etc/apt/apt.conf.d/80-retries

# 更新包列表并安装必要工具（分步进行，便于调试）
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git \
        curl \
        wget \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 安装其他工具（分开安装以便调试）
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        unzip \
        xmlstarlet \
        jq \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 创建必要的目录
RUN mkdir -p /app/workspace \
    && mkdir -p /app/configs \
    && mkdir -p /app/reports \
    && mkdir -p /app/scripts \
    && mkdir -p /app/.m2/repository

# 复制 Maven 配置文件
COPY maven-configs/ /app/configs/

# 复制扫描脚本
COPY docker/scripts/ /app/scripts/

# 设置脚本执行权限
RUN chmod +x /app/scripts/*.sh

# 设置 Maven 本地仓库
ENV MAVEN_OPTS="-Dmaven.repo.local=/app/.m2/repository -Xmx1024m"

# 创建扫描用户（非 root）
RUN useradd -m -u 1000 scanner && \
    chown -R scanner:scanner /app

# 设置环境变量
ENV JAVA_HOME=/usr/local/openjdk-11
ENV MAVEN_HOME=/usr/share/maven
ENV PATH=$PATH:$MAVEN_HOME/bin

# 验证安装
RUN git --version && \
    mvn --version && \
    java -version

# 切换到扫描用户
USER scanner

# 预热Maven（下载常用插件）
RUN mvn help:evaluate -Dexpression=maven.version -q -DforceStdout || true

# 暴露端口（如果需要）
EXPOSE 8080

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD echo "JaCoCo Scanner is healthy"

# 默认命令
CMD ["/app/scripts/scan.sh"]

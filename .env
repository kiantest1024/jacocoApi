# GitHub Webhook JaCoCo API 环境配置示例
# 复制此文件为 .env 并根据您的环境进行配置

# =============================================================================
# GitHub Webhook 配置
# =============================================================================

# GitHub Webhook 密钥 - 在 GitHub 仓库设置中配置的 Secret
# 建议使用强密钥，例如: openssl rand -hex 32
GIT_WEBHOOK_SECRET=your_default_secret_token

# =============================================================================
# API 配置
# =============================================================================

# API 基本信息
API_TITLE=JaCoCo Scan Trigger API
API_DESCRIPTION=用于从 Git webhooks 触发 JaCoCo 代码覆盖率扫描的 API
API_VERSION=1.0.0

# 调试模式 (开发时设置为 True，生产环境设置为 False)
DEBUG=True

# 服务器配置 (注释掉，使用代码中的默认值)
# SERVER_HOST=0.0.0.0
# SERVER_PORT=8001

# =============================================================================
# 安全配置
# =============================================================================

# 允许的来源 (CORS) - 用逗号分隔多个域名，或使用 * 允许所有
ALLOWED_ORIGINS=["*"]

# API 密钥 (用于保护某些端点)
# API_KEY=your_api_key_here

# =============================================================================
# 速率限制配置
# =============================================================================

# 是否启用速率限制
RATE_LIMIT_ENABLED=True

# 每个时间窗口内允许的请求数
RATE_LIMIT_REQUESTS=100

# 时间窗口大小 (秒)
RATE_LIMIT_WINDOW_SECONDS=3600

# =============================================================================
# Redis 配置 (用于 Celery 消息队列)
# =============================================================================

# Redis 服务器地址
REDIS_HOST=localhost

# Redis 端口
REDIS_PORT=6379

# Redis 数据库编号
REDIS_DB=0

# Redis 密码 (如果有)
REDIS_PASSWORD=

# =============================================================================
# Celery 配置
# =============================================================================

# Celery 代理 URL (如果不设置，将使用 Redis URL)
# CELERY_BROKER_URL=redis://localhost:6379/0

# Celery 结果后端 URL (如果不设置，将使用 Redis URL)
# CELERY_RESULT_BACKEND=redis://localhost:6379/0

# =============================================================================
# 日志配置
# =============================================================================

# 日志级别 (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# 日志格式
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# =============================================================================
# JaCoCo 扫描配置 (注释掉，使用代码中的默认值)
# =============================================================================

# 默认 Maven 目标
# DEFAULT_MAVEN_GOALS=clean,test,jacoco:report

# 默认覆盖率阈值
# DEFAULT_COVERAGE_THRESHOLD=50.0

# 扫描超时时间 (秒)
# SCAN_TIMEOUT=1800

# 最大并发扫描数
# MAX_CONCURRENT_SCANS=3

# =============================================================================
# 通知配置
# =============================================================================

# 飞书机器人 Webhook (示例)
# LARK_WEBHOOK=https://open.larksuite.com/open-apis/bot/v2/hook/your-hook-id

# 钉钉机器人 Webhook (示例)
# DINGTALK_WEBHOOK=https://oapi.dingtalk.com/robot/send?access_token=your-token

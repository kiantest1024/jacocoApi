FROM ubuntu:22.04

# 设置环境变量
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PORT=8002
ENV DEBIAN_FRONTEND=noninteractive

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    git \
    openjdk-11-jdk \
    maven \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# 设置Python别名
RUN ln -s /usr/bin/python3 /usr/bin/python

# 设置Java环境变量
ENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
ENV PATH="$JAVA_HOME/bin:$PATH"

# 验证安装
RUN python --version && java -version && mvn -version

# 设置Maven配置
ENV MAVEN_OPTS="-Xmx1024m"
ENV MAVEN_CONFIG="/root/.m2"

# 创建应用目录
WORKDIR /app

# 复制依赖文件
COPY requirements.txt .

# 安装Python依赖
RUN pip3 install --no-cache-dir -r requirements.txt

# 复制应用代码
COPY app.py .
COPY config.py .
COPY jacoco_tasks.py .
COPY lark_notification.py .

# 复制Docker扫描相关文件
COPY docker_scan.sh .
COPY entrypoint.sh .
RUN chmod +x docker_scan.sh entrypoint.sh

# 创建必要目录
RUN mkdir -p /app/reports /app/repos

# 预下载Maven依赖以加速后续构建
RUN mvn help:evaluate -Dexpression=maven.version -q -DforceStdout || true

# 暴露端口
EXPOSE 8002

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8002/health || exit 1

# 启动命令
CMD ["python", "app.py"]

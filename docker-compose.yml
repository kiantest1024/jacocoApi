version: '3'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - redis
    volumes:
      - ./:/app
    restart: unless-stopped
    networks:
      - jacoco-network
  
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - jacoco-network
  
  celery:
    build: .
    command: celery -A tasks.celery_app worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
    volumes:
      - ./:/app
    restart: unless-stopped
    networks:
      - jacoco-network
  
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - jacoco-network
  
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - jacoco-network

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  jacoco-network:
    driver: bridge
